{
  hostname_prefix = 'ffkbu-',
  site_name = 'Freifunk KBU Bonn',
  site_code = 'ffkbu',

  -- 32 bytes of random data, encoded in hexacimal
  -- Must be the same of all nodes in one mesh domain
  -- Can be generated using: echo $(hexdump -v -n 32 -e '1/1 "%02x"' </dev/urandom)
  domain_seed = '6a27649c55c855e5c1b09915eb7157cce6411060eedf72b39f21e49ad91ed8cd',

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.159.0.0/18',
  prefix6 = 'fdd3:5d16:b5dd:fc39::/64',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {
    '0.de.pool.ntp.org',
    '1.de.pool.ntp.org',
    '2.de.pool.ntp.org',
    '3.de.pool.ntp.org',
    '0.openwrt.pool.ntp.org',
    '1.openwrt.pool.ntp.org',
    '2.openwrt.pool.ntp.org',
    '3.openwrt.pool.ntp.org',
  },

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,
    ap = {
      -- ESSID used for client network.
      ssid = 'kbu.freifunk.net',
      -- disabled = true, (optional)
    },
    ibss = {
      ssid = '02:d1:11:37:fc:39',  -- ESSID used for mesh
      bssid = '02:d1:11:37:fc:39', -- BSSID used for mesh
      -- Bitrate used for multicast/broadcast packets.
      mcast_rate = 12000,
      -- disabled = true, (optional)
    },
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except for channel.
  wifi5 = {
    channel = 44,
    ap = {
      ssid = 'kbu.freifunk.net',
    },
    ibss = {
      ssid = '02:d1:11:37:fc:59',  -- ESSID used for mesh
      bssid = '02:d1:11:37:fc:59',  -- BSSID used for mesh
      -- Bitrate used for multicast/broadcast packets.
      mcast_rate = 12000,
    },
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.159.0.3',
    ip6 = 'fdd3:5d16:b5dd:fc39::fc39',
    -- anycast MAC of all nodes
    mac = '16:41:ca:fe:be:ef',
  },

  -- Options specific to routing protocols (optional)
  -- mesh = {
    -- Options specific to the batman-adv routing protocol (optional)
    -- batman_adv = {
      -- Gateway selection class (optional)
      -- The default class 20 is based on the link quality (TQ) only,
      -- class 1 is calculated from both the TQ and the announced bandwidth
      -- gw_sel_class = 1,
    -- },
  -- },
  mesh_vpn = {
    mtu = 1312,
    enabled = true,
    fastd = {
      -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
      -- what these options do.
      -- List of crypto-methods to use.
      methods = {'salsa2012+umac'},
      configurable = true,
      -- syslog_level = 'warn',

      groups = {
        backbone = {
          -- Limit number of connected peers to reduce bandwidth.
          limit = 1,
          peers = {
            fastd1 = {
              key = '657af03e36ff1b8bbe5a5134982a4f110c8523a9a63293870caf548916a95a03',
              remotes = {
                'ipv4 "fastd1.kbu.freifunk.net" port 10002',
                'ipv4 "fastd1.ffkbu.de" port 10002'
              },
            },
            fastd2 = {
              key = '93654269a9ad0763851ed930e47a453b70bcbb874879e5c1f639df3f44d72d31',
              remotes = {
                'ipv4 "fastd2.kbu.freifunk.net" port 10002',
                'ipv4 "fastd2.ffkbu.de" port 10002'
              },
            },
            fastd3 = {
              key = 'd56181dfe9b5ac7cfe68a94c0ce406322a9924286a751673da0dcb28ad5218b0',
              remotes = {
                'ipv4 "fastd3.kbu.freifunk.net" port 10002',
                'ipv4 "fastd3.ffkbu.de" port 10002'
              },
            },
            fastd4 = {
              key = '9b3f65f99963343e2785c8c4fad65e70b73ee7e1205d63bd84f3e2decb53e621',
              remotes = {
                'ipv4 "fastd4.kbu.freifunk.net" port 10002',
                'ipv4 "fastd4.ffkbu.de" port 10002'
               },
            },
            fastd5 = {
              key = '6e4546121d16e7189715aef8ceb78ab58d59462720969318445f97b4301374d1',
              remotes = {
                'ipv4 "fastd5.kbu.freifunk.net" port 10002',
                'ipv4 "fastd5.ffkbu.de" port 10002'
              },
            },
            fastd6 = {
              key = '2a2c69dbb3b9fd90d7eb8e2f70be70b472d811cd4f3743ad9f5002d14b5c94cd',
              remotes = {
                'ipv4 "fastd6.kbu.freifunk.net" port 10002',
                'ipv4 "fastd6.ffkbu.de" port 10002'
              },
            },
            fastd7 = {
              key = '68de6815a89270c8eaf7832deedb8da098aad2ae5793cd2cd55dec3541ad28f2',
              remotes = {
                'ipv4 "fastd7.kbu.freifunk.net" port 10002',
                'ipv4 "fastd7.ffkbu.de" port 10002'
              },
            },
            fastd8 = {
              key = 'b41a9714b1178ce428b15af0b6055cc204b39af2088ef3b371d8c36219eedd1e',
              remotes = {
                'ipv4 "fastd8.kbu.freifunk.net" port 10002',
                'ipv4 "fastd8.ffkbu.de" port 10002'
              },
            },
          },
        },
      },
    },
    bandwidth_limit = {
      -- The bandwidth limit can be enabled by default here.
      enabled = false,
      -- Default upload limit (kbit/s).
      egress = 200,
      -- Default download limit (kbit/s).
      ingress = 3000,
    },
  },

  autoupdater = {
    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'noupdate',
    enabled = false,

    -- List of branches. You may define multiple branches.
    branches = {
      noupdate = {
        name = 'noupdate',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {'http://'},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 9999,

        -- List of public keys of maintainers.
        pubkeys = {
          '0000000000000000000000000000000000000000000000000000000000000000', -- Alice
          '1111111111111111111111111111111111111111111111111111111111111111', -- Bob
          '2222222222222222222222222222222222222222222222222222222222222222', -- Mary
        },
      },
    },
  },

  -- Node roles
  -- roles = {
  --   default = 'node',
  --   list = {
  --     'node',
  --     'test',
  --     'backbone',
  --     'service',
  --   },
  -- },

  -- Skip setup mode (config mode) on first boot
  setup_mode = {
    skip = false,
  },
  config_mode = {
    remote_login = {
      show_password_form = true, -- default false
      min_password_length = 12
    },
    -- Show/hide the altitude field
    geo_location = {
      show_altitude = false,
    },
    -- define if the contact field is obligatory (optional)
    -- owner = {
      -- obligatory = true
    -- },
  },
}
